/*
*****************************************************************************
                          Workshop 3 Reflection
Full Name  : keyurkumar shankarlal patel
Student ID#: 170852214
Email      : kpatel453@myseneca.ca
Section    : ZBB

Authenticity Declaration:
I declare this submission is the result of my own work and has not been
shared with any other student or 3rd party content provider. This submitted
piece of work is entirely of my own creation.
*****************************************************************************
*/


In completing Workshop 3, I acquired a robust set of skills in object-oriented programming that greatly enriched my understanding of C++. One of the fundamental aspects I mastered was the ability to define a class type. This involved not only creating a blueprint for objects but also encapsulating data within the class, a crucial concept for data security and integrity.

The workshop honed my skills in privatizing data within the class type. Understanding the nuances of access specifiers, particularly the private specifier, was pivotal. It highlighted the significance of data hiding, ensuring that the internal workings of the class are shielded from external interference, promoting a more secure and reliable program.

I also became proficient in instantiating objects of the class type. This process allowed me to create tangible instances of abstract concepts, emphasizing the power of classes in modeling real-world entities within a program. Through this, I learned to use member functions effectively. These functions served a dual purpose: querying the state of an object and effecting changes to its state. This dynamic interaction with objects provided a practical understanding of the role of member functions in object-oriented programming.

Additionally, I gained proficiency in utilizing standard library facilities to format data inserted into the output stream. This skill not only enhanced the readability of the output but also provided a glimpse into the versatility of C++ standard libraries, showcasing the efficiency and elegance they bring to programming tasks.

One of the workshop's challenging yet rewarding aspects was dynamic memory allocation within a class. Understanding the intricacies of allocating memory for class objects and responsibly deallocating it to prevent memory leaks was a crucial learning curve. Through rigorous practice, I mastered the use of new and delete operators, ensuring that memory management within my classes was robust and error-free.

rom class definition to encapsulation, instantiation, and dynamic memory allocation, I have gained a deep understanding of these concepts.