/*
*****************************************************************************
                          Wrokshop 4 reflection
Full Name  : keyurkumar shankarlal patel
Student ID#: 170852214
Email      : kpatel453@myseneca.ca
Section    : ZAA

Authenticity Declaration:
I declare this submission is the result of my own work and has not been
shared with any other student or 3rd party content provider. This submitted
piece of work is entirely of my own creation.
*****************************************************************************
*/

In completing this workshop, I delved into essential concepts of object-oriented programming (OOP) in C++, gaining valuable insights and skills. One of the key areas I focused on was the creation of default and overloaded constructors. Understanding the nuances between these constructors became apparent while working on the Label and LabelMaker classes. For instance, I encountered challenges in initializing member variables correctly, especially when dealing with dynamic memory allocation. Constructing appropriate constructors to handle various initialization scenarios proved vital, ensuring objects are initialized in a valid state. The intricacies of pointer management also became evident, particularly in the Label class, where I struggled with proper allocation and deallocation of memory for character arrays. This struggle underscored the importance of resource management and the role of destructors in preventing memory leaks.

Additionally, encapsulating functionality within member functions proved to be a significant learning point. I faced difficulties in accessing private members within the Label class, highlighting the importance of understanding access specifiers. Debugging and error resolution played a crucial role, especially when addressing issues related to private member access and undefined identifiers. A noteworthy challenge arose while implementing the text member function, where I had to manage private data members effectively.

Throughout this process, I referred back to the course notes and the workshop's sample solutions, utilizing them as references to overcome challenges and refine my understanding of OOP principles.